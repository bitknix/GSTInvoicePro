"""update business profile model

Revision ID: 5157a60ec575
Revises: 
Create Date: 2025-04-15 17:16:25.627599

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String, Boolean


# revision identifiers, used by Alembic.
revision = '5157a60ec575'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Define table for data updates
    business_profiles = table('business_profiles',
        column('id', sa.Integer),
        column('city', sa.String),
        column('state_code', sa.String),
        column('pin', sa.String),
        column('is_default', sa.Boolean),
        column('phone', sa.String),
        column('email', sa.String)
    )
    
    # Add columns with nullable=True first
    op.add_column('business_profiles', sa.Column('city', sa.String(), nullable=True))
    op.add_column('business_profiles', sa.Column('state_code', sa.String(), nullable=True))
    op.add_column('business_profiles', sa.Column('pin', sa.String(), nullable=True))
    op.add_column('business_profiles', sa.Column('is_default', sa.Boolean(), nullable=True))
    
    # Set default values for existing data
    op.execute(
        business_profiles.update().values({
            'city': 'Default City',
            'state_code': '00',
            'pin': '000000',
            'is_default': False
        })
    )
    
    # Now make the columns not nullable
    op.alter_column('business_profiles', 'city', nullable=False)
    op.alter_column('business_profiles', 'state_code', nullable=False)
    op.alter_column('business_profiles', 'pin', nullable=False)
    
    # Update existing data for phone and email
    op.execute(
        business_profiles.update().where(business_profiles.c.phone.is_(None)).values({
            'phone': '0000000000'
        })
    )
    
    op.execute(
        business_profiles.update().where(business_profiles.c.email.is_(None)).values({
            'email': 'default@example.com'
        })
    )
    
    # Make phone and email not nullable
    op.alter_column('business_profiles', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('business_profiles', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    # Drop pan column
    op.drop_column('business_profiles', 'pan')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('business_profiles', sa.Column('pan', sa.VARCHAR(), autoincrement=False, nullable=True))
    
    # Update pan with a default value
    business_profiles = table('business_profiles',
        column('pan', sa.String)
    )
    op.execute(
        business_profiles.update().values({
            'pan': 'DEFAULTPAN'
        })
    )
    
    # Make pan not nullable
    op.alter_column('business_profiles', 'pan',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    # Revert other changes
    op.alter_column('business_profiles', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('business_profiles', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('business_profiles', 'is_default')
    op.drop_column('business_profiles', 'pin')
    op.drop_column('business_profiles', 'state_code')
    op.drop_column('business_profiles', 'city')
    # ### end Alembic commands ### 